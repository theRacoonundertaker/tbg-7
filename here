#include<Windows.h>
#include<iostream>
#include<string>
#pragma comment(lib, "winmm.lib")
using namespace std;
//global variables
//1) declare an empty inventory with a string array
string inventory[10];
int dubloons = 100;

//function delcarations
void MonsterGen();
void BattleSystem();
void Shop();
void PetGen();

int PlayerHealth = 10000;

void itemDropper();

int main() {
	//initialize it with all empty spaces
	for (int i = 0; i < 10; i++)
		inventory[i] = " ";

	inventory[0] = "wooden sword";

	cout << "Welcome to the Dungeon!" << endl;

	//local variables
	string direction = "a";
	int room = 1;
	int affinity = 0;
	bool hasWon = false;

	while (direction != "q" && PlayerHealth > 0 && hasWon == false) { //game loop!!!------------------}
		//3) print out the inventory
		cout << "your inventory:" << endl;
		for (int i = 0; i < 10; i++)
			cout << inventory[i] << " ";
		cout << endl; 

		string direction;
	
			switch (room) {//switch holds the different rooms
			case 1:
				system("color 1B");
				cout << "you're in room 1, You wake up in blank room with a IV bag and a plain bed. You can go (e)ast. you see a shiny (k)ey on the ground." << endl;
				cout << "press d to pet the dog" << endl;
				if(inventory[0]!="key")
					cout << "you see a shiny key on the ground." << endl;
				cout << "there's a sho(p) in the corner." << endl;
				getline(cin, direction); //use this get strings with spaces
				if (direction.compare("e")==0 || direction.compare("east")==0 || direction.compare("go east")==0)
				if (direction == "e")
					room = 2;
				//if they press d, add 10 to affinity
				if (direction == "d")
					affinity += 10;
					PetGen();
				if (direction == "k")
					cout << "you got a shiny key" << endl;
				inventory[0] = "key";

				if (direction == "p")
					Shop();//call the function
				break;
			case 2:
				//MonsterGen();
				system("color 2F");
				cout << "you're in room 2 which is the main room/living room, that has a bunch of a paintings with classical musicians. You can go (s)outh or (w)est." << endl;
				getline(cin, direction);
				if (direction.compare("s") == 0 || direction.compare("south") == 0 || direction.compare("go south") == 0)

				if (direction.compare("w") == 0 || direction.compare("west") == 0 || direction.compare("go west") == 0)
				if (direction == "d") {
					affinity += 10;
					PetGen();
					cout << "the dogs affinity for you grows by 10" << endl;
				}
				if (direction == "s")
					room = 3;
				if (direction == "w")
					room = 1;
				break;
			case 3:
				system("color 47");
				cout << "you're in room 3 which is the Enchanted Forest: Where you find yourself surrounded by towering trees and magical creatures." << endl;
				cout << "You can go (n)orth or (s)outh." << endl;
				cout << "there's a (t)reasure box in the corner!" << endl;
				getline(cin, direction);
				if (direction.compare("n") == 0 || direction.compare("north") == 0 || direction.compare("go north") == 0)

				if (direction.compare("s") == 0 || direction.compare("south") == 0 || direction.compare("go south") == 0)
				if (direction == "d")
					affinity += 10;
					PetGen();
				if (direction == "n")
					room = 2;
				if (direction == "s")
					room = 4;
				if (direction == "t") //the player types "t" for this to run
					itemDropper();
				break;
			case 4:
				system("color 3F");
				cout << "you're in room 4 which is the Cyberpunk Investion Room." << endl;
				cout << "Step into a gritty cyberpunk world filled with neon lights and high tech gadgets." << endl;
				cout <<	"You can go (n)orth or (e)ast." << endl;
				getline(cin, direction);
				if (direction.compare("n") == 0 || direction.compare("north") == 0 || direction.compare("go north") == 0)

				if (direction.compare("e") == 0 || direction.compare("east") == 0 || direction.compare("go east") == 0)
				if (direction == "d")
					affinity += 10;
					PetGen();
				if (direction == "n")
					room = 3;
				if (direction == "e")
					room = 5;
				break;
			case 5:
				system("color 5F");
				cout << "you're in room 5. You can go (w)est or (s)outh." << endl;
				getline(cin, direction);
				if (direction.compare("w") == 0 || direction.compare("west") == 0 || direction.compare("go west") == 0)

				if (direction.compare("s") == 0 || direction.compare("south") == 0 || direction.compare("go south") == 0)
				if (direction == "d")
					affinity += 10;
					PetGen();
				if (direction == "w")
					room = 4;
				if (direction == "s")
					room = 6;
				break;

			case 6:
				system("color 4F");
				cout << "you're in room 6. You can go (n)orth or (e)ast" << endl;
				getline(cin, direction);
				if (direction.compare("north") == 0 || direction.compare("north") == 0 || direction.compare("go north") == 0)

				if (direction.compare("e") == 0 || direction.compare("east") == 0 || direction.compare("go east") == 0)
				if (direction == "d")
					affinity += 10;
					PetGen();
				if (direction == "n")
					room = 5;
				if (direction == "e")
					room = 7;
				break;



			case 7:
				system("color 6B");
				cout << "you're in room 7. You can go (w)est or (s)outh" << endl;
				getline(cin, direction);
			if (direction.compare("w") == 0 || direction.compare("west") == 0 || direction.compare("go west") == 0)

			if (direction.compare("s") == 0 || direction.compare("south") == 0 || direction.compare("go south") == 0)
				if (direction == "w")
					room = 6;
				if (direction == "s")
					room = 8;
				break;


			case 8:
				system("color 0E");
				cout << "you're in room 8. You can go (n)orth or (e)ast" << endl;
				getline(cin, direction);
			if (direction.compare("n") == 0 || direction.compare("north") == 0 || direction.compare("go north") == 0)

			if (direction.compare("e") == 0 || direction.compare("east") == 0 || direction.compare("go east") == 0)
				if (direction == "n")
					room = 7;
				if (direction == "e")
					room = 9;
				break;

			case 9:
				system("color 4F");
				cout << "you're in room 9. You can go (w)est or (s)outh" << endl;
				getline(cin, direction);
				if (direction.compare("w") == 0 || direction.compare("west") == 0 || direction.compare("go west") == 0)

				if (direction.compare("w") == 0 || direction.compare("west") == 0 || direction.compare("go west") == 0)

				if (direction == "w")
					room = 8;
				if (direction == "s")
					if (inventory[0] == "key") {
						room = 10;
						cout << "you knock the door with the key!" << endl;
						inventory[0] = " "; //get rid of the key
					}
				break;

			case 10:
				PlaySound(TEXT("Big Chungus Boss Music.wav"), NULL, SND_FILENAME | SND_ASYNC);
				system("color 0C");
				BattleSystem();
				hasWon = true;
				cout << "you're in room 10. Welcome the Chungus you're about to meet your maker." << endl;
				break;
				                            
			}//end switch
		}//end game loop
	}//end main

//function delcarations

void BattleSystem() {
	int MonsterHealth = 5000;
	int num;
	cout << "------------------------------------------------------" << endl;
	while (PlayerHealth > 0 && MonsterHealth > 0) { //keep looping until you or the monster dies
		//monster attacks player
		num = rand() % 100; //0-99dmg
		PlayerHealth -= num;
		cout <<endl<<endl<< "The monster bites you for " << num << "damage." << endl;
		//player attacks monster
		num = rand() % 10+10; //10-19dmg
		PlayerHealth -= num;
		cout << "You hit the monster for " << num << "damage." << endl;
		cout << "Your health is" << PlayerHealth << ", and the monster's is " << MonsterHealth << endl;
	}//end of loop 
	cout << "------------------------------------------------------" << endl;
}

void PetGen() {
	//paste the code from tuesday here!
	cout << "GRR I GOT THAT DOG IN ME" << endl;

	int num = rand() % 100;
	if (num < 20)
		cout << "Demarcus licks face" << endl;
	else if (num < 50)
		cout << "Demarcus fights with them hands " << endl;
	else if (num < 90)
		cout << "Demarcus Raps better than Eminem" << endl;
	else if (num < 100)
		cout << "Demarcus using pimp power" << endl;
}

void itemDropper() {
	int num = rand() % 100; //b/t 0-99
	if (num < 25) {
		cout << "you got a dirty Hat!" << endl;
		inventory[1] = "Hat";
	}
	else if (num < 50) {
	cout << "you got a handful of legos!" << endl;
	inventory[2] = "legos";

	}
	else if (num < 60) {
	cout << "you got a CHICKEN" << endl;
	inventory[3] = "chicken";
	}
	else {
		cout << "you didnt get anything" << endl;
	}
}

	//void MonsterGen()
	

void Shop() {
	int input = 23453245;
	while (input != 0) {
		cout << "welcome to the shop!" << endl;
		cout << "You have " << dubloons << "dubloons" << endl;
		cout << "items for sale:" << endl;
		cout << "1) sword: 20" << endl;
		cout << "2) potion: 10" << endl;
		cout << "3) armor: 50" << endl;
		cout << "press 0 to quit" << endl;
		cin >> input;

		if (input == 1) {
			if (dubloons >= 20) {
				cout << "you bought a sword!" << endl;
				inventory[1] = "sword";
				dubloons -= 20;
			}
			else {
				cout << "sorry, you don't have enough dubloons" << endl;
			}
			if (input == 2) {
				if (dubloons >= 10) {
					cout << "you bought a potion!" << endl;
					inventory[2] = "potion";
					dubloons -= 10;
				}
				else
					cout << "sorry, you don't have enough dubloons" << endl;
			}
			if (input == 3) {
				cout << "you bought a armor!" << endl;
				inventory[3] = "armor";
				dubloons -= 50;
			}
			if (dubloons >= 20) {
				cout << "you bought a sword!" << endl;
				inventory[1] = "sword";
				dubloons -= 20;
				cout << "sorry, you don't have enough dubloons" << endl;
			}
			else {
			}
		}
	}
}// end of the shop function
